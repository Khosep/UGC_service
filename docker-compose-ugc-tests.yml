name: tests-ugc
version: '3.9'

services:
  postgres-ugc-test:
    container_name: $UGC_TEST_POSTGRES_HOST
    image: postgres:16.0-alpine3.18
    env_file:
      - .env
    environment:
      - PGPORT=$UGC_TEST_POSTGRES_PORT
      - POSTGRES_HOST=$UGC_TEST_POSTGRES_HOST
      - POSTGRES_PORT=$UGC_TEST_POSTGRES_PORT
      - POSTGRES_DB=$UGC_TEST_POSTGRES_DB
      - POSTGRES_USER=$UGC_TEST_POSTGRES_USER
      - POSTGRES_PASSWORD=$UGC_TEST_POSTGRES_PASSWORD
    expose:
      - $UGC_TEST_POSTGRES_PORT
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p $UGC_TEST_POSTGRES_PORT -U $UGC_TEST_POSTGRES_USER -d $UGC_TEST_POSTGRES_DB"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: "no"

  redis-ugc-test:
    container_name: $UGC_TEST_REDIS_HOST
    image: redis:7.2.3-alpine3.19
    expose:
      -  $UGC_TEST_REDIS_PORT
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "-p $UGC_TEST_REDIS_PORT", "ping"]
      interval: 10s
      timeout: 1s
      retries: 3
    restart: "no"
    command: redis-server --port $UGC_TEST_REDIS_PORT --save 60 1 --loglevel notice

  fastapi-ugc-test:
    environment:
      - POSTGRES_HOST=$UGC_TEST_POSTGRES_HOST
      - POSTGRES_PORT=$UGC_TEST_POSTGRES_PORT
      - POSTGRES_DB=$UGC_TEST_POSTGRES_DB
      - POSTGRES_USER=$UGC_TEST_POSTGRES_USER
      - POSTGRES_PASSWORD=$UGC_TEST_POSTGRES_PASSWORD
      - UGC_REDIS_HOST=$UGC_TEST_REDIS_HOST
      - UGC_REDIS_PORT=$UGC_TEST_REDIS_PORT
      - UGC_FASTAPI_HOST=$UGC_TEST_FASTAPI_HOST
      - UGC_FASTAPI_PORT=$UGC_TEST_FASTAPI_PORT
      - ENABLE_TRACER=False
    container_name: $UGC_TEST_FASTAPI_HOST
    build:
      context: ./ugc-service/fastapi-ugc
    image: $UGC_FASTAPI_HOST
    env_file:
      - .env
    ports:
      - $UGC_TEST_FASTAPI_PORT:$UGC_TEST_FASTAPI_PORT
    volumes:
      - fastapi_ugc_test__log:/ugc-service/logs
    healthcheck:
      test: curl -s -f http://localhost:$UGC_TEST_FASTAPI_PORT/ugc/openapi || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
    restart: "no"

  ugc-tests:
    env_file:
      - .env
    container_name: ugc-tests
    build:
      context: ./ugc-service/tests-ugc
    image: tests_ugc_img
    depends_on:
       fastapi-ugc-test:
        condition: service_healthy
    command: poetry run pytest


volumes:
  fastapi_ugc_test__log:
