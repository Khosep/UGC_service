name: sprint8_ugc
version: '3.9'

services:
  kafka-0:
    image: bitnami/kafka:3.5.2
    ports:
      - "9094:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

    volumes:
    - kafka_0_data:/bitnami/kafka

  kafka-1:
    image: bitnami/kafka:3.5.2
    ports:
      - "9095:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

    volumes:
      - kafka_1_data:/bitnami/kafka

  kafka-2:
    image: bitnami/kafka:3.5.2
    ports:
      - "9096:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

    volumes:
      - kafka_2_data:/bitnami/kafka

  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft

  zookeeper:
    image: zookeeper:3.8.3
    container_name: zookeeper
    hostname: zookeeper


  clickhouse-node1:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./ugc-service/data/node1:/etc/clickhouse-server
      - ./ugc-service/data/node1:/docker-entrypoint-initdb.d
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./ugc-service/data/node2:/etc/clickhouse-server
      - ./ugc-service/data/node2:/docker-entrypoint-initdb.d
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./ugc-service/data/node3:/etc/clickhouse-server
      - ./ugc-service/data/node3:/docker-entrypoint-initdb.d
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./ugc-service/data/node4:/etc/clickhouse-server
      - ./ugc-service/data/node4:/docker-entrypoint-initdb.d
    depends_on:
      - zookeeper

  fastapi-ugc:
    container_name: $UGC_FASTAPI_HOST
    build:
      context: ./ugc-service/fastapi-ugc
    image: $UGC_FASTAPI_HOST
    env_file:
      - .env
    expose:
      - $UGC_FASTAPI_PORT
    volumes:
      - fastapi_ugc_log:/ugc-service/logs

    healthcheck:
      test: curl -s -f http://localhost:$UGC_FASTAPI_PORT/ugc/openapi || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
    restart: always

  nginx-ugc:
    container_name: nginx-ugc
    image: nginx:1.25-bookworm
    ports:
      - 60:80
    volumes:
      - nginx_ugc_log:/var/log/nginx
      - ./ugc-service/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ugc-service/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      fastapi-ugc:
        condition: service_healthy
    restart: always


volumes:
  fastapi_ugc_log:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  nginx_ugc_log:
